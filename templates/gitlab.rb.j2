external_url 'https://{{ gitlab_domain }}/'
# Listen on a different port since this isn't the only thing running here
# This may not be necessary
nginx['listen_port'] = 8443
# Turn off SSL, Traefik will handle that
nginx['listen_https'] = false
letsencrypt['enable'] = false
# Use a Docker secret to init the root password
gitlab_rails['initial_root_password'] = File.read('/run/secrets/gitlab_root_password')

# So we can got to Prometheus from outside the Docker host
prometheus['listen_address'] = '0.0.0.0:9090'

registry_external_url 'https://{{ gitlab_registry_domain }}'
gitlab_rails['registry_enabled'] = true
gitlab_rails['api_url'] = 'https://{{ gitlab_registry_domain }}'
registry['enable'] = true
# Once again, we don't need nginx proxying for us since we have Traefik
registry_nginx['enable'] = false
registry['registry_http_addr'] = "0.0.0.0:5000"

gitlab_rails['smtp_enable'] = {{ gitlab_smtp_enable }}
gitlab_rails['smtp_address'] = '{{ gitlab_smtp_address }}'
gitlab_rails['smtp_port'] = {{ gitlab_smtp_port }}
gitlab_rails['smtp_user_name'] = '{{ gitlab_smtp_user_name }}'
gitlab_rails['smtp_password'] = '{{ gitlab_smtp_password }}'
gitlab_rails['smtp_domain'] = '{{ gitlab_smtp_domain }}'
gitlab_rails['smtp_authentication'] = '{{ gitlab_smtp_authentication }}'
gitlab_rails['smtp_enable_starttls_auto'] = {{ gitlab_smtp_enable_starttls_auto }}

gitlab_rails['omniauth_providers'] = [
{% if gitlab_omniauth_azuread_enabled %}
  {
    "name" => "azure_activedirectory_v2",
    "args" => {
      "client_id" => "{{ gitlab_az_app_client_id }}",
      "client_secret" => "{{ gitlab_az_app_client_secret }}",
      "tenant_id" => "{{ gitlab_az_app_tenant_id }}",
    }
  }
{% endif %}
{{ ", " if gitlab_omniauth_azuread_enabled and gitlab_omniauth_keycloak_enabled else "" }}
{% if gitlab_omniauth_keycloak_enabled %}
  {
    'name' => 'openid_connect',
    'label' => 'Keycloak',
    'args' => {
      'name' => 'openid_connect',
      'scope' => ['openid', 'profile', 'email'],
      'response_type' => 'code',
      'issuer' =>  '{{ gitlab_keycloak_realm }}',
      'client_auth_method' => 'query',
      'discovery' => true,
      'uid_field' => 'preferred_username',
      'client_options' => {
        'identifier' => '{{ gitlab_keycloak_client_id }}',
        'secret' => '{{ gitlab_keycloak_client_secret }}',
        'redirect_uri' => '{{ gitlab_redirect_uri }}'
      }
    }
  }
{% endif %}
]

{% if gitlab_omniauth_ldap_enabled %}
gitlab_rails['ldap_enabled'] = true
gitlab_rails['prevent_ldap_sign_in'] = false
gitlab_rails['ldap_servers'] = {
'main' => {
  'label' => 'LDAP',
  'host' =>  '{{ gitlab_ldap_server }}',
  'port' => 389,
  'uid' => 'sAMAccountName',
  'encryption' => 'simple_tls',
  'verify_certificates' => true,
  'bind_dn' => '{{ gitlab_ldap_bind_dn }}',
  'password' => '{{ gitlab_ldap_bind_pw }}',
  'verify_certificates' => true,
  'tls_options' => {
    'ca_file' => '',
    'ssl_version' => '',
    'ciphers' => '',
    'cert' => '',
    'key' => ''
  },
  'timeout' => 10,
  'active_directory' => true,
  'allow_username_or_email_login' => false,
  'block_auto_created_users' => false,
  'base' => 'dc=example,dc=com',
  'user_filter' => '',
  'attributes' => {
    'username' => ['uid', 'userid', 'sAMAccountName'],
    'email' => ['mail', 'email', 'userPrincipalName'],
    'name' => 'cn',
    'first_name' => 'givenName',
    'last_name' => 'sn'
  },
  'lowercase_usernames' => false,
  }
}
{% endif %}
